install.packages("OpenMx")
install.packages("tidyverse")
install.packages("psych")
install.packages("polycor")
# Load Libraries & Options
rm(list=ls())
library(OpenMx)
library(psych); library(polycor)
data("cars")
head(cars)
data("mtcars")
head(mtcars)
View(mtcars)
mod01<-lm(mpg~disp+hp, data=mtcars)
summary(mod01)
mod02<-lm(mpg~hp+disp, data=mtcars)
summary(mod02)
anova(mod01)
anova(mod02)
?anova()
options(contrasts = c(“contr.sum”,”contr.poly”))
options(contrasts = c("contr.sum","contr.poly"))
mod01<-lm(mpg~disp+hp, data=mtcars)
drop(model, .~., test="F")
drop1(model, .~., test="F")
drop1(mod01, .~., test="F")
mod01<-lm(mpg~disp*hp, data=mtcars)
summary(mod01)
anova(mod01)
mod02<-lm(mpg~hp*disp, data=mtcars)
summary(mod02)
summary(mod01)
summary(mod02)
anova(mod01)
anova(mod02)
summary(mod01)
summary(mod01)
summary(mod02)
anova(mod01)
anova(mod02)
library(tidyverse)
library(pracma) # sample_entropy()
library(ggpubr)
library(cowplot)
library(gridExtra)
library(patchwork)
library(reshape)
library(nonlinearTseries)
install.packages("nonlinearTseries")
library(nonlinearTseries)
setwd("~/GitHub/pediatric_RL/scripts")
# LOAD A LIST OF PARTICIPANTS PLUS OTHER TESTING SCORES
setwd("~/GitHub/pediatric_RL/")
list.files()
list.files("./data/")
FILE.1 <- "./data/EncodingInDevelopmen-ScoreReport1.csv"
RECORD <- read.csv(FILE.1)
setwd("~/GitHub/pediatric_RL/scripts")
FILE.1 <- "./data/EncodingInDevelopmen-ScoreReport1.csv"
RECORD <- read.csv(FILE.1)
# LOAD A LIST OF PARTICIPANTS PLUS OTHER TESTING SCORES
setwd("~/GitHub/pediatric_RL/")
FILE.1 <- "./data/EncodingInDevelopmen-ScoreReport1.csv"
RECORD <- read.csv(FILE.1)
RECORD$participant_id <- as.factor(RECORD$participant_id)
#remove participant D016
RECORD <- subset(RECORD, participant_id != "D016")
######## Now A Loop that iterates retrieving each participants data and creating a DF of lagged data ####
for(q in 1:nrow(RECORD)){
FILE.PATH.RL <- paste0("C:/Users/jdkonrad/Box/LangLab/DCD/Data/",RECORD$participant_id[q],"/",
RECORD$participant_id[q],"_RL.csv")
RL_TEMP <- read.csv(FILE.PATH.RL, header = T)
### Trim empty rows off #
RL_length = nrow(RL_TEMP)
Empty_Throws <- vector()
y=1
for (z in 1:RL_length){
if (is.na(RL_TEMP$X_error[z]) & RL_TEMP$Throw[z] ==0 & RL_TEMP$Condition[z] == '' ){
Empty_Throws[y] = z
y=y+1
}
}
Total_Throws <- min(Empty_Throws) - 1 #This is the length to snip at because the remaining cells are empty
RL_TEMP <- RL_TEMP[1:Total_Throws,]
###
### Add factors for short, far, hit, miss
for(i in 1:nrow(RL_TEMP)){
if(abs(RL_TEMP$Y_error[i]) <= 25){RL_TEMP$Hit_Category[i] <- "Hit"
}  else if(RL_TEMP$Y_error[i] > 25 && RL_TEMP$Y_error[i] < 100){RL_TEMP$Hit_Category[i] <- "Far"
} else if(RL_TEMP$Y_error[i] < -25){RL_TEMP$Hit_Category[i] <- "Short"
} else if(RL_TEMP$Y_error[i] == 100 ){RL_TEMP$Hit_Category[i] <- "Miss"}
}
RL_TEMP$Hit_Category <- as.factor(RL_TEMP$Hit_Category)
# Add lag columns and new DF for calculations
t <- RL_TEMP$Y_error#[2:nrow(RL_TEMP)]
t_minus_1 <- lag(RL_TEMP$Y_error, n=1)#[2:nrow(RL_TEMP)]
t_minus_2 <- lag(RL_TEMP$Y_error, n=2)
t_minus_3 <- lag(RL_TEMP$Y_error, n=3)
Hit_Category_minus_1 <- lag(RL_TEMP$Hit_Category, n=1)
Hit_Category_minus_2 <- lag(RL_TEMP$Hit_Category, n=2)
Hit_Category_minus_3 <- lag(RL_TEMP$Hit_Category, n=3)
Lag_Data.Y <- data.frame("participant_id" = RECORD$participant_id[q],
"Trial" = RL_TEMP$Trial,
"Hit_Category" = RL_TEMP$Hit_Category,
"t" = t,
"t_minus_1" =t_minus_1,
"t_minus_2" =t_minus_2,
"t_minus_3" =t_minus_3,
"Hit_Category_minus_1" = Hit_Category_minus_1,
"Hit_Category_minus_2" = Hit_Category_minus_2,
"Hit_Category_minus_3" = Hit_Category_minus_3)
Lag_Data.Y$TTC <- Lag_Data.Y$t - Lag_Data.Y$t_minus_1
##### Save lag data into participants folder ######
write.csv(Lag_Data.Y, file =
paste0("C:/Users/jdkonrad/Box/LangLab/DCD/Data/",RECORD$participant_id[q],"/",
RECORD$participant_id[q],"_Y_Error_Lag_Data.csv"))
print(q)
}
